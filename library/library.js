// Generated by CoffeeScript 1.3.3
// Version 1.0
(function() {

  window.Library = (function() {

    function Library(formats) {
      this.formats = formats;
      $(".content").on('click', '.expand', function(e) {
        $(e.target).closest('.css').find('.expander').hide();
        return $(e.target).closest('.css').find('.rules').fadeIn(200);
      });
      $(".content").on('click', '.collapse', function(e) {
        $(e.target).closest('.css').find('.rules').hide();
        return $(e.target).closest('.css').find('.expander').show();
      });
      this.renderStyles();
    }

    Library.prototype.rgb2hex = function(rgb) {
      var hex;
      rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
      hex = function(x) {
        return ("0" + parseInt(x).toString(16)).slice(-2);
      };
      return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
    };

    Library.prototype.renderStyles = function() {
      var format, _results,
        _this = this;
      _results = [];
      for (format in this.formats) {
        _results.push($(".content .element[data-type=" + format + "]").each(function(index, item) {
          var element, expander, html, property, props, rules, switched, value, _i, _len, _ref;
          props = [];
          _ref = _this.formats[format];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            property = _ref[_i];
            element = $(item).children()[0];
            value = $(element).css(property);
            if (property === 'color' && property.toString().indexOf("rgb(") !== 1) {
              value = _this.rgb2hex(value);
            }
            html = "<span class='css-property'>" + property + "</span>: <span class='css-rule'>" + value + "</span>";
            props.push(html);
          }
          expander = $('<div class="expander"><a href="#" class="expand">CSS &raquo;</a></div>');
          rules = $('<div class="rules">' + props.join("<br />") + '<br /><a href="#" class="collapse">&laquo; Collapse</a></div>');
          switched = $("<div class='css'></div>").append(expander).append(rules);
          return $(item).closest("tr").find(".property").html(switched);
        }));
      }
      return _results;
    };

    return Library;

  })();

}).call(this);
